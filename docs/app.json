[{"name":"app.R","content":"colour_days <- function(value) {\n    if (value == 1) return(\"bg-red\")\n    if (value %in% 2:7) return(\"bg-orange\")\n    \"bg-yellow\"\n}\n\npluralise <- function(value) if (value == 1) \"day\" else \"days\"\n\nui <- bslib::page_fillable(\n    theme = bslib::bs_theme(preset = \"bootstrap\"),\n    padding = 75,\n    fillable_mobile = TRUE,\n    title = \"CRAN Deadlines\",\n    bslib::input_dark_mode(id = \"dark_mode\", mode = \"dark\"),\n    htmltools::h1(\"⌛️ CRAN Deadlines\"),\n    shiny::htmlOutput(\"cards\", inline = TRUE)\n)\n\nserver <- function(input, output, session) {\n\n    db <- tools::CRAN_package_db()\n    db <- db[!is.na(db$Deadline), c(\"Deadline\", \"Package\", \"Title\")]\n    db$URL <- paste0(\"https://CRAN.R-project.org/package=\", db$Package)\n    db$Deadline <- as.Date(db$Deadline)\n    db$Days <- db$Deadline - Sys.Date()\n    db <- db |> sort_by(~list(Deadline, Package))\n\n    cards_list <- vector(\"list\", length = nrow(db))\n\n    for (i in seq(nrow(db))) {\n\n        pkg <- db[i, ]\n\n        cards_list[[i]] <- bslib::card(\n            bslib::card_header(\n                class = colour_days(pkg$Days),\n                paste(pkg$Days, pluralise(pkg$Days))\n            ),\n            bslib::card_title(\n                htmltools::a(href = pkg$URL, paste0(\"{\", pkg$Package, \"}\"))\n            ),\n            bslib::card_body(shiny::markdown(paste0(\"> \", pkg$Title))),\n            bslib::card_footer(\n                htmltools::a(\n                    href = paste0(\n                        \"https://cran.r-project.org/web/checks/check_results_\",\n                        pkg$Package,\n                        \".html\"\n                    ),\n                    \"Issues\"\n                ),\n                \"need fixing before\",\n                pkg$Deadline\n            )\n        )\n    }\n\n    cards_taglist <- htmltools::tagList()\n\n    for (i in seq_along(cards_list)) {\n        cards_taglist <- cards_taglist |>\n            htmltools::tagAppendChild(cards_list[[i]]) |>\n            htmltools::tagAppendChild(htmltools::br())\n    }\n\n    output$cards <- shiny::renderUI({\n        cards_taglist\n    })\n\n}\n\n# Run the application\nshiny::shinyApp(ui = ui, server = server)\n","type":"text"}]
